.chapter(data-title='RingCentral OAuth demo in Node.js')
  .step(data-title='Set up the project', data-file='README.md', data-highlight='13-15')
    :markdown
      * Clone the demo repo with git.
      * Install dependencies with NPM

      *To install NPM, please install [Node.js](https://nodejs.org/)*

  .step(data-title='Configure the app appropriately', data-file='config-sample.env')
    :markdown
      ## Configuration

      Edit the `.env` file to configure your client ID, client secret and redirect URL, etc.
      
      ```
      $ cp config-sample.env .env
      $ vi config.js
      ```
      
      Please visit [Developer Portal](http://developer.ringcentral.com/) to apply client ID and secret. And ensure the redirect URI in your config file has been entered in your app settings. By default, the URL is set to the following for this demo:
      
      ```
      http://localhost:8080/callback
      ```

  .step(data-title='Create RingCentral SDK instance', data-file='app.js', data-highlight='35-39')
    p In the node.js entry file, create RingCentral SDK instance with parameters from the configuration file.

  .step(data-title='Get login URL', data-file='app.js', data-highlight='48-51')
    :markdown
      Get login URL from RingCentral SDK instance. The `authorize_uri` in the code is the login URL. It will be passed to the HTML page as template variable by mustache template engine.

  .step(data-title='Open login window', data-file='views/index.mustache', data-highlight='18')
    p When the user click the login button in the HTML page, open a new window with the login URL passed from node.js.

  .step(data-title='Parse callback URL and login', data-file='app.js', data-highlight='57-76')
    :markdown
      When login finished, plaform will redirect to the callback URL(the configured redirect URL). We handle the callback URL with express route method. In the route method, we can get the auth code from query. With this auth code, we can call the `login` API of the SDK to log into RingCentral platform.

